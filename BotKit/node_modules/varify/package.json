{
  "_args": [
    [
      "varify@0.1.1",
      "/home/akshat/KoreServer/Bef_sdk/node_modules/convict"
    ]
  ],
  "_from": "varify@0.1.1",
  "_id": "varify@0.1.1",
  "_inCache": true,
  "_installable": true,
  "_location": "/varify",
  "_npmUser": {
    "email": "thlorenz@gmx.de",
    "name": "thlorenz"
  },
  "_npmVersion": "1.2.14",
  "_phantomChildren": {},
  "_requested": {
    "name": "varify",
    "raw": "varify@0.1.1",
    "rawSpec": "0.1.1",
    "scope": null,
    "spec": "0.1.1",
    "type": "version"
  },
  "_requiredBy": [
    "/convict"
  ],
  "_resolved": "https://registry.npmjs.org/varify/-/varify-0.1.1.tgz",
  "_shasum": "98854bf465438a520788cfca136e14f511155b1e",
  "_shrinkwrap": null,
  "_spec": "varify@0.1.1",
  "_where": "/home/akshat/KoreServer/Bef_sdk/node_modules/convict",
  "author": {
    "email": "thlorenz@gmx.de",
    "name": "Thorsten Lorenz",
    "url": "http://thlorenz.com"
  },
  "bugs": {
    "url": "https://github.com/thlorenz/varify/issues"
  },
  "dependencies": {
    "redeyed": "~0.4.2",
    "through": "~2.3.4"
  },
  "description": "browserify transform that converts all const assignments to var assignments.",
  "devDependencies": {
    "browserify": "~2.14.2",
    "tap": "~0.4.3"
  },
  "directories": {},
  "dist": {
    "shasum": "98854bf465438a520788cfca136e14f511155b1e",
    "tarball": "http://registry.npmjs.org/varify/-/varify-0.1.1.tgz"
  },
  "engine": {
    "node": ">=0.6"
  },
  "homepage": "https://github.com/thlorenz/varify",
  "keywords": [
    "const",
    "var",
    "es5",
    "refactor",
    "compatible"
  ],
  "license": "MIT",
  "main": "varify.js",
  "maintainers": [
    {
      "email": "thlorenz@gmx.de",
      "name": "thlorenz"
    }
  ],
  "name": "varify",
  "optionalDependencies": {},
  "readme": "# varify [![build status](https://secure.travis-ci.org/thlorenz/varify.png)](http://travis-ci.org/thlorenz/varify)\n\nbrowserify transform that converts all const assignments to var assignments.\n\n    npm install varify\n\n## Why?\n\nSo you can get the benefits of immutable variables with help of lint tools while staying compatible with older browsers\nthat have no `const`.\n\n## Warning\n\nThe real `const` is block scoped, however when replaced with `var` this feature is lost. So only use varify if you can\ndo without block scope and are only looking for some immutability support that gets compiled out for compatibility.\n\nIf you are after block scope, have a look at [def.js](https://github.com/olov/defs) which provides\n[limited](https://github.com/olov/defs#loop-closures-limitation) support for that.\n\n## Example\n\nGiven this JavaScript:\n\n```js\nconst a = 1;\n\nvar keep = { const: 1 };\nkeep.const = 2;\n\nconst foo = function () {\n  console.log('some const s should be left unchanged');\n};\n```\n\nRunning browserify with varify transform:\n\n```js\nrequire('browserify')()\n  .transform(require('varify'))\n  .add(__dirname + '/sample.js')\n  .bundle()\n  .pipe(process.stdout);\n```\n\nOutputs:\n\n```js\nvar a = 1;\n\nvar keep = { const: 1 };\nkeep.const = 2;\n\nvar foo = function () {\n  console.log('some const s should be left unchanged');\n};\n```\n\n## Usage from Commandline\n\n    browserify -t varify sample.js > bundle.js\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/thlorenz/varify.git"
  },
  "scripts": {
    "test": "tap test/*.js"
  },
  "version": "0.1.1"
}
